dp mux(in A,B: tc(32); in select :ns(1);
         out R : tc(32)) {
   always{
   	R=select ? A : B;

	}
}
dp testMux(out A, B:tc(32); out select: ns(1); in R:tc(32)) {
always{$display($dec, "Cycle:", $cycle, ", A=", A , ", B=", B ,
" select=", select , "R=", R);}
sfg test_0 { A=3; B=6;select = 0;}
sfg test_1 { A=23; B=17;select = 1;}
sfg test_2 { A=12; B=0;select = 0;}
}
// state machine to control testbench
fsm f_testbench(testMux){
initial s0; // begin with state s0
state s1, s2; // other states are: s1, s2
@s0 (test_0) -> s1; // run test_0 and go to s1
@s1 (test_1) -> s2; // run test_1 and go to s2
@s2 (test_2) -> s0; // run test_2 and go to s0
}
system myFirstSystem {
mux(A, B, select,R);
testMux(A, B,select, R);
}